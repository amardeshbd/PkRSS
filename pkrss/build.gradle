apply plugin: 'com.android.library'

android {
  compileSdkVersion rootProject.ext.targetSdkVersion
  buildToolsVersion rootProject.ext.buildToolsVersion

  defaultConfig {
    minSdkVersion rootProject.ext.minSdkVersion
    targetSdkVersion rootProject.ext.targetSdkVersion
    versionCode Integer.parseInt(project.VERSION_CODE)
    versionName project.VERSION_NAME
  }
}

tasks.withType(Javadoc) {
  // Fixes issue related to "Javadoc generation failed"
  // See https://github.com/nostra13/Android-Universal-Image-Loader/issues/1086
  options.addStringOption('Xdoclint:none', '-quiet')
  options.addStringOption('encoding', 'UTF-8')
  options.addStringOption('charSet', 'UTF-8')
}

dependencies {
  compile fileTree(dir: 'libs', include: ['*.jar'])
  compile group: 'com.squareup.okhttp', name: 'okhttp', version: rootProject.okHttpVersion
  compile group: 'com.squareup.okhttp3', name: 'okhttp', version: rootProject.ext.okHttp3Version
  compile group: 'com.squareup.okhttp', name: 'okhttp-urlconnection', version: rootProject.ext.okHttpVersion

  androidTestCompile "com.android.support.test:runner:$rootProject.supportTestVersion"
  androidTestCompile "com.android.support.test:rules:$rootProject.supportTestVersion"
  androidTestCompile "com.squareup.okhttp:okhttp:$rootProject.okHttpVersion"
  androidTestCompile "com.squareup.okhttp:okhttp-urlconnection:$rootProject.okHttpVersion"
}

task clearJar(type: Delete) {
  delete 'build/libs/' + project.POM_ARTIFACT_ID + '_' + project.VERSION_NAME + '.jar'
}

task makeJar(type: Copy) {
  from('build/intermediates/bundles/release/')
  into('build/outputs/jar/')
  include('classes.jar')
  rename ('classes.jar', project.POM_ARTIFACT_ID + '-' +  project.VERSION_NAME + '.jar')
}

makeJar.dependsOn(clearJar, build)

apply from: 'https://raw.github.com/chrisbanes/gradle-mvn-push/master/gradle-mvn-push.gradle'
